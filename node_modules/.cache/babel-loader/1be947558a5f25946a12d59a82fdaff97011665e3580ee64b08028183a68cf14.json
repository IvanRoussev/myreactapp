{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Documents/Denshi-interview/DevOpsInterview/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [inputTask, setInputTask] = useState(\"\");\n  const [taskCounter, setTaskCounter] = useState(1);\n  const [list, setList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleInputChange = event => {\n    setInputTask(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (inputTask.trim() === \"\") {\n      setErrorMessage(\"Please enter a task.\");\n      return;\n    }\n    const newTask = {\n      id: taskCounter,\n      task: inputTask,\n      isCompleted: false\n    };\n    setList([...list, newTask]);\n    setInputTask('');\n    setErrorMessage(\"\");\n    setTaskCounter(taskCounter + 1);\n  };\n  const handleDeleteTask = id => {\n    const newList = list.filter(task => task.id !== id);\n    setList(newList);\n    newList.forEach((task, index) => {\n      task.id = index + 1;\n    });\n  };\n  const handleToggleStatus = id => {\n    const updatedList = list.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          isCompleted: !task.isCompleted\n        };\n      }\n      return task;\n    });\n    setList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker App - Denshi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: inputTask,\n        onChange: handleInputChange,\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-name ${task.isCompleted ? 'completed' : ''}`,\n          children: [task.id, \". \", task.task, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${task.isCompleted ? 'completed-status' : ''}`,\n          children: [\" \", task.isCompleted ? ' Completed ' : ' Uncompleted', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: task.isCompleted ? 'uncompleted-button' : 'completed-button',\n          onClick: () => handleToggleStatus(task.id),\n          children: task.isCompleted ? 'Uncompleted' : 'Completed '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"1wjWs2X1UO2yQSw3UM85Q8ROvo8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","inputTask","setInputTask","taskCounter","setTaskCounter","list","setList","errorMessage","setErrorMessage","handleInputChange","event","target","value","handleAddTask","trim","newTask","id","task","isCompleted","handleDeleteTask","newList","filter","forEach","index","handleToggleStatus","updatedList","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ivan/Documents/Denshi-interview/DevOpsInterview/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TaskList = () => {\n    const [inputTask, setInputTask] = useState(\"\");\n    const [taskCounter, setTaskCounter] = useState(1); \n    const [list, setList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleInputChange = (event) => {\n        setInputTask(event.target.value);\n    };\n\n    const handleAddTask = () => {\n        if (inputTask.trim() === \"\") {\n            setErrorMessage(\"Please enter a task.\");\n            return;\n        }\n\n        const newTask = {\n            id: taskCounter,\n            task: inputTask,\n            isCompleted: false,\n        };\n\n        setList([...list, newTask]);\n        setInputTask('');\n        setErrorMessage(\"\");\n        setTaskCounter(taskCounter + 1); \n    };\n\n    const handleDeleteTask = (id) => {\n        const newList = list.filter((task) => task.id !== id);\n        setList(newList);\n    \n        newList.forEach((task, index) => {\n            task.id = index + 1;\n        });\n    };\n\n    const handleToggleStatus = (id) => {\n        const updatedList = list.map((task) => {\n            if (task.id === id) {\n                return {\n                    ...task,\n                    isCompleted: !task.isCompleted,\n                };\n            }\n            return task;\n        });\n        setList(updatedList);\n    };\n\n    return (\n        <div className=\"todo-app\">\n            <h1>Task Tracker App - Denshi</h1>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            <div className=\"input-wrapper\">\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    value={inputTask}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter a task\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n\n            <ul>\n                {list.map((task) => (\n                    <li className='task' key={task.id}>\n                        <div className={`task-name ${task.isCompleted ? 'completed' : ''}`}>{task.id}. {task.task} </div>\n                        <div className={`status ${task.isCompleted ? 'completed-status' : ''}`}> {task.isCompleted ? ' Completed ' : ' Uncompleted'} </div>\n                        <button className='delete' onClick={() => handleDeleteTask(task.id)}>Delete</button>\n                        <button className={task.isCompleted ? 'uncompleted-button' : 'completed-button'} onClick={() => handleToggleStatus(task.id)}>\n                            {task.isCompleted ? 'Uncompleted' : 'Completed '}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}